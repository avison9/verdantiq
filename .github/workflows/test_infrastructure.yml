name: Test API Services

on:
  pull_request:
    branches: [ master ]

jobs:
  test-infrastructure:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Create .env file from GitHub secrets
      working-directory: backend/fast-api
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

    - name: Build and start containers
      working-directory: backend/fast-api
      run: |
        docker compose up -d --build

    - name: Wait for PostgreSQL to be ready
      run: |
        until docker exec postgres pg_isready; do
          echo "Waiting for Postgres..."
          sleep 2
        done

    - name: Run fast-api tests
      working-directory: backend/fast-api
      run: |
        docker compose run --rm test bash -c "pytest -v -n 0 tests/test_services.py"

    - name: Clean up
      if: always()
      working-directory: backend/fast-api
      run: docker compose down -v